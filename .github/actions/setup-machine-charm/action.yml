name: Set up Juju Dashboard machine charm
description: Set up the Juju Dashboard machine charm using the supplied versions.
inputs:
  dashboard-ref:
    description: Git reference to build dashboard from. Cannot be used with `dashboard-resource` or `charm-channel`.
    required: false
  bundled-dashboard:
    description: If `true`, use the version of the dashboard that's bundled in the charm repository. If set, other inputs will be ignored.
    required: false
  dashboard-version:
    description: Use a specific version of the dashboard when building the charm.
    required: false
  charm-channel:
    description: If set and this is not called from a PR this will run the e2e tests against a published charm. All other options will be ignored.
    required: false
    type: choice
    options:
      - latest/stable
      - latest/beta
      - latest/edge
  controller-app:
    required: false
    description: The Juju controller application.
    default: controller
  controller-model:
    required: false
    description: The model containing the Juju controller.
    default: controller

runs:
  using: "composite"
  steps:
    - name: Set build type
      run: |
        if [ -n "${{ inputs.charm-channel }}" ]; then
          # Use the provided charm version.
          echo 'build_type=charm-release' >> "$GITHUB_ENV"
        elif [ -n "${{ inputs.dashboard-version }}" ]; then
          # Use a specific dashboard version.
          echo 'build_type=dashboard-version' >> "$GITHUB_ENV"
        elif [ "${{ inputs.bundled-dashboard }}" == "true" ]; then
          # Use the version of the dashboard that's bundled in the repository.
          echo 'build_type=bundled-dashboard' >> "$GITHUB_ENV"
        else
          # Build dashboard from source.
          echo 'build_type=source' >> "$GITHUB_ENV"
        fi
      shell: bash
    - name: Set up Juju Dashboard release
      if: ${{ env.build_type != 'charm-release' }}
      shell: bash
      run: |
        "${{ github.workspace }}/charms/machine-charm/build.sh" \
          "${{ env.build_type }}" \
          "${{ inputs.dashboard-version }}"
    - name: Switch to controller
      run: juju switch '${{ inputs.controller-model }}'
      shell: bash
    - name: Deploy charm from channel
      if: ${{ env.build_type == 'charm-release' }}
      run: juju deploy juju-dashboard dashboard --channel '${{ inputs.charm-channel }}'
      shell: bash
    - name: Deploy built charm
      if: ${{ env.build_type != 'charm-release' }}
      run: juju deploy ${{ github.workspace }}/charms/machine-charm/juju-dashboard*.charm dashboard
      shell: bash
    - name: Integrate charm
      run: juju integrate '${{ inputs.controller-app }}' dashboard
      shell: bash
    - name: Wait for charm to be ready
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 1
        max_attempts: 5 # Retry the wait-for with a short timeout in case it gets stuck and times out. If it fails after multiple tries it's probably a real error.
        command: juju wait-for application dashboard --timeout=1m
    - name: Disable analytics
      run: juju config dashboard analytics-enabled=false
      shell: bash
