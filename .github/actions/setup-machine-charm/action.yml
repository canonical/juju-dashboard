name: Set up Juju Dashboard machine charm
description: Set up the Juju Dashboard machine charm using the supplied versions.
inputs:
  dashboard-ref:
    description: Git reference to build dashboard from. Cannot be used with `dashboard-resource` or `charm-channel`.
    required: false
  bundled-dashboard:
    description: If `true`, use the version of the dashboard that's bundled in the charm repository. If set, other inputs will be ignored.
    required: false
  dashboard-version:
    description: Use a specific version of the dashboard when building the charm.
    required: false
  charm-channel:
    description: If set and this is not called from a PR this will run the e2e tests against a published charm. All other options will be ignored.
    required: false
    type: choice
    options:
      - latest/stable
      - latest/beta
      - latest/edge
  dashboard-charm-ref:
    description: Git reference to use when cloning charm repository.
    required: false

runs:
  using: "composite"
  steps:
    - name: Set build type
      run: |
        if [ -n "${{ inputs.charm-channel }}" ]; then
          # Use the provided charm version.
          echo 'build_type=charm-release' >> "$GITHUB_ENV"
        elif [ -n "${{ inputs.dashboard-version }}" ]; then
          # Use a specific dashboard version.
          echo 'build_type=dashboard-version' >> "$GITHUB_ENV"
        elif [ "${{ inputs.bundled-dashboard }}" == "true" ]; then
          # Use the version of the dashboard that's bundled in the repository.
          echo 'build_type=bundled-dashboard' >> "$GITHUB_ENV"
        else
          # Build dashboard from source.
          echo 'build_type=checkout' >> "$GITHUB_ENV"
        fi
      shell: bash
    - name: Check out Juju Dashboard charm
      if: ${{ env.build_type != 'charm-release' }}
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.dashboard-charm-ref }}
        repository: canonical/juju-dashboard-charm
        path: juju-dashboard-charm
    - name: Set up Juju Dashboard release with specified version
      if: ${{ env.build_type == 'dashboard-version' }}
      run: |
        cd '${{ github.workspace }}/juju-dashboard-charm'
        ./scripts/update-machine-charm-dashboard.sh '${{ inputs.dashboard-version }}'
      shell: bash
    - name: Build Juju Dashboard for release
      if: ${{ env.build_type == 'checkout' }}
      shell: bash
      run: |
        cd '${{ github.workspace }}'
        yarn install
        yarn build
        cd '${{ github.workspace }}/juju-dashboard-charm/machine-charm'
        rm -rf src/dist/*
        cp -r ${{ github.workspace }}/build/* src/dist
    - name: Install charmcraft
      if: ${{ env.build_type != 'charm-release' }}
      run: sudo snap install charmcraft --classic
      shell: bash
    - name: Wait for charmcraft snap
      if: ${{ env.build_type != 'charm-release' }}
      uses: ./.github/actions/wait-for-snap
      with:
        snap: charmcraft
    - name: Build the charm
      if: ${{ env.build_type != 'charm-release' }}
      run: |
        cd '${{ github.workspace }}/juju-dashboard-charm/machine-charm'
        charmcraft pack
      shell: bash
    - name: Switch to controller
      run: juju switch controller
      shell: bash
    - name: Deploy charm from channel
      if: ${{ env.build_type == 'charm-release' }}
      run: juju deploy juju-dashboard dashboard --channel '${{ inputs.charm-channel }}'
      shell: bash
    - name: Deploy built charm
      if: ${{ env.build_type != 'charm-release' }}
      run: juju deploy ${{ github.workspace }}/juju-dashboard-charm/machine-charm/juju-dashboard*.charm dashboard
      shell: bash
    - name: Integrate charm
      run: juju integrate controller dashboard
      shell: bash
    - name: Wait for charm to be ready
      run: juju wait-for application dashboard
      shell: bash
    - name: Disable analytics
      run: juju config dashboard analytics-enabled=false
      shell: bash
